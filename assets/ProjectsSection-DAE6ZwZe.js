import{r as g,j as e,m as r,A as p}from"./animations-Bpk--Vdw.js";import{p as l}from"./index-DYkMLgjV.js";import{X as u,C as c,G as h,a as f,Y as b,T as y,b as v,U as x}from"./ui-pe-4AND1.js";import"./vendor-1zw1pNgy.js";const w={id:"telegram-bot-manager",title:"Telegram Bot Manager",description:"A comprehensive Telegram bot management system built with Python and Django. This project provides a complete solution for managing multiple Telegram bots, handling user interactions, and providing analytics.",shortDescription:"Advanced Telegram bot management system with analytics and multi-bot support",image:"/images/projects/telegram-bot-manager.jpg",technologies:["Python","Django","Telegram Bot API","PostgreSQL","Redis","Celery","Docker"],category:"telegram-bot",status:"completed",featured:!0,githubUrl:"https://github.com/ItsOrv/telegram-bot-manager",liveUrl:"https://botmanager.example.com",demoUrl:"https://demo.botmanager.example.com",startDate:"2024-01-15",endDate:"2024-03-20",team:["Orv (Full-Stack Developer)"],challenges:["Managing multiple bot instances simultaneously","Handling high-volume message processing","Implementing real-time analytics","Ensuring bot reliability and uptime"],solutions:["Implemented microservices architecture with Docker","Used Redis for caching and Celery for background tasks","Created real-time dashboard with WebSocket connections","Implemented comprehensive monitoring and alerting system"],results:["Successfully managed 50+ bot instances","Processed over 1M messages per day","Achieved 99.9% uptime","Reduced response time by 60%"],screenshots:["/images/projects/telegram-bot-manager/dashboard.jpg","/images/projects/telegram-bot-manager/analytics.jpg","/images/projects/telegram-bot-manager/bot-config.jpg"],videoUrl:"https://youtube.com/watch?v=example",tags:["telegram","bot","management","python","django","analytics"],difficulty:"advanced",timeSpent:"2 months",client:"Internal Project",industry:"Technology"},j={id:"cybersecurity-dashboard",title:"Cybersecurity Monitoring Dashboard",description:"A real-time cybersecurity monitoring dashboard that provides comprehensive threat detection, vulnerability assessment, and security analytics. Built with modern web technologies and integrated with various security tools.",shortDescription:"Real-time cybersecurity monitoring and threat detection dashboard",image:"/images/projects/cybersecurity-dashboard.jpg",technologies:["React","TypeScript","Node.js","MongoDB","WebSocket","D3.js","Chart.js"],category:"cybersecurity",status:"completed",featured:!0,githubUrl:"https://github.com/ItsOrv/cybersecurity-dashboard",liveUrl:"https://security.example.com",startDate:"2024-02-01",endDate:"2024-04-15",team:["Orv (Full-Stack Developer)","Security Analyst"],challenges:["Real-time threat detection and alerting","Processing large volumes of security logs","Creating intuitive visualizations for complex data","Ensuring system security and compliance"],solutions:["Implemented WebSocket connections for real-time updates","Used MongoDB with optimized indexing for log processing","Created interactive charts with D3.js and Chart.js","Implemented role-based access control and audit logging"],results:["Detected 99.5% of security threats in real-time","Reduced incident response time by 70%","Improved security team efficiency by 50%","Achieved SOC 2 compliance"],screenshots:["/images/projects/cybersecurity-dashboard/overview.jpg","/images/projects/cybersecurity-dashboard/threats.jpg","/images/projects/cybersecurity-dashboard/analytics.jpg"],tags:["cybersecurity","monitoring","dashboard","react","real-time","threat-detection"],difficulty:"advanced",timeSpent:"2.5 months",client:"Security Company",industry:"Cybersecurity"},I={id:"ai-automation-tool",title:"AI-Powered Automation Tool",description:"An intelligent automation platform that uses machine learning to automate repetitive tasks across various applications. Features include natural language processing, workflow optimization, and predictive analytics.",shortDescription:"Intelligent automation platform with ML-powered task optimization",image:"/images/projects/ai-automation-tool.jpg",technologies:["Python","TensorFlow","FastAPI","React","PostgreSQL","Docker","Kubernetes"],category:"ai-ml",status:"in-progress",featured:!0,githubUrl:"https://github.com/ItsOrv/ai-automation-tool",startDate:"2024-03-01",team:["Orv (Full-Stack Developer & AI Engineer)"],challenges:["Implementing accurate natural language processing","Creating flexible workflow automation","Optimizing ML model performance","Ensuring cross-platform compatibility"],solutions:["Used transformer-based models for NLP tasks","Implemented modular workflow engine","Optimized models with TensorFlow Lite","Created universal API for cross-platform integration"],results:["Automated 80% of repetitive tasks","Reduced manual work time by 65%","Achieved 95% accuracy in task recognition","Improved workflow efficiency by 70%"],screenshots:["/images/projects/ai-automation-tool/dashboard.jpg","/images/projects/ai-automation-tool/workflow.jpg","/images/projects/ai-automation-tool/analytics.jpg"],tags:["ai","automation","machine-learning","nlp","workflow","python"],difficulty:"advanced",timeSpent:"3 months (ongoing)",client:"Tech Startup",industry:"Artificial Intelligence"},k={id:"telegram-panel",title:"Telegram Panel",shortDescription:"Comprehensive tool for managing multiple Telegram accounts, monitoring groups/channels, and automated message forwarding.",description:"Telegram Panel is a powerful management system designed to handle multiple Telegram accounts efficiently. It monitors groups and channels for specific keywords, automatically forwards relevant messages to designated channels, and provides comprehensive account management capabilities. Perfect for businesses and content managers who need to streamline their Telegram operations.",image:"/images/telegram-panel.jpg",technologies:["Python","Telethon","Telegram API","AsyncIO","SQLite","Telegram Bot API"],category:"telegram-bot",status:"completed",featured:!0,githubUrl:"https://github.com/ItsOrv/Telegram-Panel",liveUrl:void 0,demoUrl:void 0,startDate:"2025-07-01",endDate:"2025-07-18",team:["ItsOrv"],challenges:["Managing multiple Telegram accounts simultaneously","Implementing efficient message monitoring and filtering","Handling rate limits and API restrictions","Creating a user-friendly interface for complex operations"],solutions:["Used Telethon library for robust Telegram API integration","Implemented async/await patterns for concurrent operations","Created keyword-based filtering system with regex support","Built modular architecture for easy maintenance and updates"],results:["Successfully manages multiple accounts without conflicts","10+ stars on GitHub with active community","Efficient message processing with minimal resource usage","MIT License for open-source collaboration"],screenshots:[],videoUrl:void 0,tags:["telegram","automation","multi-account","monitoring","telethon"],difficulty:"advanced",timeSpent:"2 weeks",client:"Open Source",industry:"Social Media Management"},N={id:"telegram-chain-store",title:"Telegram Chain Store Bot",shortDescription:"Versatile Telegram bot for seamless e-commerce experiences with transaction handling and store management.",description:"The Telegram Chain Store Bot is a comprehensive e-commerce solution built for Telegram. It enables small business owners and sales representatives to handle transactions directly within the Telegram platform. The bot features inventory management, order processing, payment integration, and customer support capabilities, making it perfect for businesses looking to expand their online presence through Telegram.",image:"/images/telegram-store.jpg",technologies:["Python","Telegram Bot API","SQLite","Payment Gateway","E-commerce","Telegram"],category:"telegram-bot",status:"completed",featured:!0,githubUrl:"https://github.com/ItsOrv/Telegram-Chain-Store",liveUrl:void 0,demoUrl:void 0,startDate:"2025-07-01",endDate:"2025-07-18",team:["ItsOrv"],challenges:["Implementing secure payment processing within Telegram","Creating intuitive product catalog management","Handling complex order workflows and inventory tracking","Ensuring data security and user privacy"],solutions:["Integrated secure payment gateways with Telegram payments","Built dynamic product catalog with image and description support","Implemented real-time inventory tracking and order management","Added comprehensive admin panel for store management"],results:["Complete e-commerce solution within Telegram platform","Secure transaction processing and order management","User-friendly interface for both customers and store owners","Scalable architecture for growing businesses"],screenshots:[],videoUrl:void 0,tags:["telegram","e-commerce","bot","payments","store","business"],difficulty:"advanced",timeSpent:"3 weeks",client:"Open Source",industry:"E-commerce"},D={id:"ai-pdf-translate",title:"AI PDF Translator",shortDescription:"Intelligent PDF translation tool using AI to accurately translate documents while preserving formatting and layout.",description:"AI PDF Translator is an advanced document translation system that leverages artificial intelligence to provide accurate translations of PDF documents. The tool maintains the original formatting, layout, and structure while translating content between multiple languages. It features OCR capabilities for scanned documents, context-aware translation, and batch processing for multiple documents.",image:"/images/ai-pdf-translate.jpg",technologies:["Python","AI/ML","OCR","PDF Processing","Translation API","Computer Vision"],category:"ai-ml",status:"completed",featured:!0,githubUrl:"https://github.com/ItsOrv/Ai-PDF-Translate",liveUrl:void 0,demoUrl:void 0,startDate:"2025-09-01",endDate:"2025-09-18",team:["ItsOrv"],challenges:["Preserving PDF formatting during translation process","Handling complex layouts and multi-column documents","Implementing accurate OCR for scanned documents","Managing large file processing efficiently"],solutions:["Used advanced PDF parsing libraries to maintain structure","Implemented AI-powered layout analysis and reconstruction","Integrated multiple OCR engines for better text recognition","Created batch processing system with progress tracking"],results:["Accurate translation with preserved document formatting","Support for multiple languages and document types","Efficient processing of large documents and batch operations","User-friendly interface with drag-and-drop functionality"],screenshots:[],videoUrl:void 0,tags:["ai","translation","pdf","ocr","document-processing","machine-learning"],difficulty:"advanced",timeSpent:"2 weeks",client:"Open Source",industry:"Document Processing"},P={id:"ai-shop-assistant",title:"AI Shop Assistant",shortDescription:"Intelligent shopping assistant powered by AI to help users find products, compare prices, and make informed purchasing decisions.",description:"AI Shop Assistant is a smart shopping companion that uses artificial intelligence to enhance the online shopping experience. The system analyzes user preferences, searches for products across multiple platforms, compares prices, and provides personalized recommendations. It features natural language processing for product queries, price tracking, and intelligent filtering to help users make the best purchasing decisions.",image:"/images/ai-shop-assistant.jpg",technologies:["Python","AI/ML","Web Scraping","Natural Language Processing","Price Comparison","Recommendation Engine"],category:"ai-ml",status:"completed",featured:!0,githubUrl:"https://github.com/ItsOrv/Ai-Shop-Assistant",liveUrl:void 0,demoUrl:void 0,startDate:"2025-06-01",endDate:"2025-06-01",team:["ItsOrv"],challenges:["Implementing accurate product search across multiple platforms","Creating intelligent price comparison algorithms","Building personalized recommendation systems","Handling real-time data updates and price changes"],solutions:["Developed multi-platform web scraping with anti-detection measures","Implemented machine learning algorithms for price prediction","Created user preference learning system with feedback loops","Built real-time data synchronization and caching mechanisms"],results:["Accurate product search and price comparison across platforms","Personalized recommendations based on user behavior","Real-time price tracking and alert system","User-friendly interface with natural language queries"],screenshots:[],videoUrl:void 0,tags:["ai","shopping","e-commerce","price-comparison","recommendation","web-scraping"],difficulty:"advanced",timeSpent:"3 weeks",client:"Open Source",industry:"E-commerce"},T={id:"orv-hub",title:"Orv Hub",shortDescription:"Comprehensive development hub and project management platform built with modern web technologies.",description:"Orv Hub is a full-stack development platform that serves as a central hub for project management, code collaboration, and development tools. Built with TypeScript and modern web technologies, it provides developers with an integrated environment for managing multiple projects, tracking progress, and collaborating with team members. The platform features real-time updates, version control integration, and comprehensive project analytics.",image:"/images/orv-hub.jpg",technologies:["TypeScript","React","Node.js","WebSocket","Database","Real-time Updates","Project Management"],category:"web-development",status:"completed",featured:!0,githubUrl:"https://github.com/ItsOrv/Orv-Hub",liveUrl:void 0,demoUrl:void 0,startDate:"2025-06-01",endDate:"2025-06-01",team:["ItsOrv"],challenges:["Building real-time collaboration features","Implementing comprehensive project management tools","Creating scalable architecture for multiple projects","Integrating version control and development workflows"],solutions:["Used WebSocket technology for real-time updates","Implemented modular architecture with microservices","Created intuitive dashboard with drag-and-drop functionality","Integrated Git workflows and automated deployment pipelines"],results:["Comprehensive project management and collaboration platform","Real-time updates and seamless team collaboration","Integrated development tools and version control","Scalable architecture supporting multiple concurrent projects"],screenshots:[],videoUrl:void 0,tags:["typescript","react","project-management","collaboration","real-time","development-hub"],difficulty:"advanced",timeSpent:"4 weeks",client:"Personal Project",industry:"Software Development"},S=[w,j,I,k,N,D,P,T],C=()=>S.filter(n=>n.featured),B=()=>{const n=C(),[i,o]=g.useState(null),m=t=>{i?.id===t.id?o(null):o(t)};return e.jsx(e.Fragment,{children:e.jsxs("div",{id:"projects-section",className:"space-y-12",children:[e.jsxs(r.div,{initial:{opacity:0,y:30},whileInView:{opacity:1,y:0},transition:{duration:.8},viewport:{once:!0},className:"text-center mb-16",children:[e.jsx("h2",{className:"heading-section mb-8",children:l.heading}),e.jsx("p",{className:"subheading-executive mx-auto",children:l.subheading})]}),e.jsx("div",{className:"space-y-8",children:n.map((t,d)=>e.jsx(r.div,{initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},transition:{duration:.4,delay:d*.05,ease:"easeOut"},viewport:{once:!0,margin:"-50px"},className:"project-showcase hover-lift-executive group cursor-pointer",onClick:()=>m(t),style:{willChange:"transform, opacity"},children:e.jsxs("div",{className:"premium-card-content",children:[e.jsxs("div",{className:"flex justify-between items-start mb-4",children:[e.jsx("h3",{className:"text-xl font-bold text-slate-200 group-hover:text-white transition-colors",children:t.title}),e.jsxs("div",{className:"flex items-center gap-2",children:[e.jsx("span",{className:`badge-${t.status==="completed"?"executive":"premium"}`,children:t.status.replace("-"," ").toUpperCase()}),e.jsx("button",{className:"text-slate-400 hover:text-white transition-colors",children:i?.id===t.id?e.jsx(u,{className:"w-5 h-5"}):e.jsx("svg",{className:"w-5 h-5",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:e.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M19 9l-7 7-7-7"})})})]})]}),e.jsx("p",{className:"text-slate-400 mb-6 leading-relaxed",children:t.shortDescription}),e.jsxs("div",{className:"flex flex-wrap gap-2 mb-6",children:[t.technologies.slice(0,4).map(a=>e.jsx("span",{className:"px-3 py-1 bg-slate-800/50 text-slate-300 text-sm rounded-full",children:a},a)),t.technologies.length>4&&e.jsxs("span",{className:"px-3 py-1 bg-slate-700/50 text-slate-400 text-sm rounded-full",children:["+",t.technologies.length-4," more"]})]}),e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsx("span",{className:"text-slate-500 text-sm",children:t.category}),e.jsxs("div",{className:"flex items-center text-blue-400 text-sm font-medium group-hover:text-blue-300 transition-colors",children:[i?.id===t.id?"Hide Details":"View Details",e.jsx("svg",{className:`w-4 h-4 ml-1 transition-transform ${i?.id===t.id?"rotate-180":""}`,fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:e.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M19 9l-7 7-7-7"})})]})]}),e.jsx(p,{children:i?.id===t.id&&e.jsx(r.div,{initial:{opacity:0,height:0},animate:{opacity:1,height:"auto"},exit:{opacity:0,height:0},transition:{duration:.3,ease:"easeInOut"},className:"mt-6 pt-6 border-t border-slate-700/50 overflow-hidden",style:{willChange:"height, opacity"},children:e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{children:[e.jsx("h4",{className:"text-lg font-semibold text-white mb-3",children:"Description"}),e.jsx("p",{className:"text-slate-300 leading-relaxed",children:t.description})]}),e.jsxs("div",{children:[e.jsxs("h4",{className:"text-lg font-semibold text-white mb-3 flex items-center gap-2",children:[e.jsx(c,{className:"w-5 h-5 text-blue-400"})," Technologies"]}),e.jsx("div",{className:"flex flex-wrap gap-2",children:t.technologies.map(a=>e.jsx("span",{className:"px-3 py-1 bg-slate-800/60 text-slate-200 text-sm rounded-full",children:a},a))})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"text-lg font-semibold text-white mb-3",children:"Links"}),e.jsxs("div",{className:"flex flex-wrap gap-3",children:[t.githubUrl&&e.jsxs("a",{href:t.githubUrl,target:"_blank",rel:"noopener noreferrer",className:"btn-executive-sm flex items-center gap-2",children:[e.jsx(h,{className:"w-4 h-4"})," GitHub"]}),t.liveUrl&&e.jsxs("a",{href:t.liveUrl,target:"_blank",rel:"noopener noreferrer",className:"btn-executive-sm flex items-center gap-2",children:[e.jsx(f,{className:"w-4 h-4"})," Live Demo"]}),t.videoUrl&&e.jsxs("a",{href:t.videoUrl,target:"_blank",rel:"noopener noreferrer",className:"btn-executive-sm flex items-center gap-2",children:[e.jsx(b,{className:"w-4 h-4"})," Demo Video"]})]})]}),t.challenges&&t.challenges.length>0&&e.jsxs("div",{children:[e.jsxs("h4",{className:"text-lg font-semibold text-white mb-3 flex items-center gap-2",children:[e.jsx(y,{className:"w-5 h-5 text-red-400"})," Challenges"]}),e.jsx("ul",{className:"space-y-2",children:t.challenges.map((a,s)=>e.jsx("li",{className:"text-slate-300",children:a},s))})]}),t.solutions&&t.solutions.length>0&&e.jsxs("div",{children:[e.jsxs("h4",{className:"text-lg font-semibold text-white mb-3 flex items-center gap-2",children:[e.jsx(v,{className:"w-5 h-5 text-emerald-400"})," Solutions"]}),e.jsx("ul",{className:"space-y-2",children:t.solutions.map((a,s)=>e.jsx("li",{className:"text-slate-300",children:a},s))})]}),t.results&&t.results.length>0&&e.jsxs("div",{children:[e.jsxs("h4",{className:"text-lg font-semibold text-white mb-3 flex items-center gap-2",children:[e.jsx(c,{className:"w-5 h-5 text-purple-400"})," Results"]}),e.jsx("ul",{className:"space-y-2",children:t.results.map((a,s)=>e.jsx("li",{className:"text-slate-300",children:a},s))})]}),t.team&&t.team.length>0&&e.jsxs("div",{children:[e.jsxs("h4",{className:"text-lg font-semibold text-white mb-3 flex items-center gap-2",children:[e.jsx(x,{className:"w-5 h-5 text-orange-400"})," Team"]}),e.jsx("ul",{className:"space-y-2",children:t.team.map((a,s)=>e.jsx("li",{className:"text-slate-300",children:a},s))})]})]})})})]})},t.id))})]})})};export{B as default};
